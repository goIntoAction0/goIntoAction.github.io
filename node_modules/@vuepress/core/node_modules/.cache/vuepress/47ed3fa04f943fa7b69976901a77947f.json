{"remainingRequest":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/docs/vuepress/vuepress_markdown.md?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/docs/vuepress/vuepress_markdown.md","mtime":1632837951964},{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/cache-loader/dist/cjs.js","mtime":1610445103076},{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/babel-loader/lib/index.js","mtime":1610445103058},{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/cache-loader/dist/cjs.js","mtime":1610445103076},{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/vue-loader/lib/index.js","mtime":1610445103223},{"path":"/Users/xzx/Library/Mobile Documents/com~apple~CloudDocs/2021/code/xin-blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1610445102978}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaW1wb3J0KCcuL2xpYi10aGF0LWFjY2Vzcy13aW5kb3ctb24taW1wb3J0JykudGhlbihmdW5jdGlvbiAobW9kdWxlKSB7Ly8gdXNlIGNvZGUKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["vuepress_markdown.md"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0VA,eAAA;AACA,EAAA,OADA,qBACA;AACA,WAAA,oCAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA,CACA;AACA,KAFA;AAGA;AALA,CAAA","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"markdown相关\"><a class=\"header-anchor\" href=\"#markdown相关\">#</a> markdown相关</h1>\n<h2 id=\"一、markdown拓展\"><a class=\"header-anchor\" href=\"#一、markdown拓展\">#</a> 一、markdown拓展</h2>\n<h3 id=\"_1-leader-anchors\"><a class=\"header-anchor\" href=\"#_1-leader-anchors\">#</a> 1. leader anchors</h3>\n<p>所有的标题将会自动地应用<code>anchor</code>链接，<code>anchor</code>的渲染可以通过<code>markdown.anchor</code>来配置。</p>\n<h3 id=\"_2-链接\"><a class=\"header-anchor\" href=\"#_2-链接\">#</a> 2. 链接</h3>\n<h4 id=\"_2-1-内部链接\"><a class=\"header-anchor\" href=\"#_2-1-内部链接\">#</a> 2.1 内部链接</h4>\n<p>网站内部的链接，将会被转换成 <code>&lt;router-link&gt;</code> 用于 SPA 导航。</p>\n<p>同时，站内的每一个文件夹下的 <code>README.md</code> 或者 <code>index.md</code>文件都会被自动编译为 <code>index.html</code>，对应的链接将被视为 <code>/</code>。</p>\n<p>以如下的文件结构为例：</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>.\n├─ README.md\n├─ foo\n│  ├─ README.md\n│  ├─ one.md\n│  └─ two.md\n└─ bar\n   ├─ README.md\n   ├─ three.md\n   └─ four.md\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br></div><!--beforeend--></div><!--afterend--><p>假设你现在在 <code>foo/one.md</code> 中：</p>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token url\">[<span class=\"token content\">Home</span>](<span class=\"token url\">/</span>)</span> <span class=\"token comment\">&lt;!-- 跳转到根部的 README.md --></span>\n<span class=\"token url\">[<span class=\"token content\">foo</span>](<span class=\"token url\">/foo/</span>)</span> <span class=\"token comment\">&lt;!-- 跳转到 foo 文件夹的 index.html --></span>\n<span class=\"token url\">[<span class=\"token content\">foo heading</span>](<span class=\"token url\">./#heading</span>)</span> <span class=\"token comment\">&lt;!-- 跳转到 foo/index.html 的特定标题位置 --></span>\n<span class=\"token url\">[<span class=\"token content\">bar - three</span>](<span class=\"token url\">../bar/three.md</span>)</span> <span class=\"token comment\">&lt;!-- 具体文件可以使用 .md 结尾（推荐） --></span>\n<span class=\"token url\">[<span class=\"token content\">bar - four</span>](<span class=\"token url\">../bar/four.html</span>)</span> <span class=\"token comment\">&lt;!-- 也可以用 .html --></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"_2-2-链接的重定向\"><a class=\"header-anchor\" href=\"#_2-2-链接的重定向\">#</a> 2.2 链接的重定向</h4>\n<p>VuePress 支持重定向到干净链接。如果一个链接 <code>/foo</code> 找不到，VuePress 会自行寻找一个可用的 <code>/foo/</code> 或 <code>/foo.html</code>。</p>\n<p>反过来，当 <code>/foo/</code> 或 <code>/foo.html</code> 中的一个找不到时，VuePress 也会尝试寻找另一个。</p>\n<p>借助这种特性，我们可以通过官方插件 <a href=\"https://vuepress.github.io/plugins/clean-urls/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-clean-urls<OutboundLink/></a> (opens new window) 定制你的网站路径。</p>\n<div class=\"custom-block tip\"><p class=\"custom-block-title\">TIP</p>\n<p>注意:</p>\n<ol>\n<li>无论是否使用了 <code>permalink</code> 和 <code>clean-urls</code> 插件，你的相对路径都应该依赖于当前的文件结构来定义。</li>\n<li>在上面的例子中，即使你将 <code>/foo/one.md</code> 的路径设为了 <code>/foo/one/</code>，你依然应该通过 <code>./two.md</code> 来访问 <code>/foo/two.md</code>。</li>\n</ol>\n</div>\n<h4 id=\"_2-3-page-suffix\"><a class=\"header-anchor\" href=\"#_2-3-page-suffix\">#</a> 2.3 Page Suffix</h4>\n<p>Pages and internal links get generated with the .html suffix by default.</p>\n<p>You can customize this by setting config.markdown.pageSuffix.</p>\n<h4 id=\"_2-4-外部链接\"><a class=\"header-anchor\" href=\"#_2-4-外部链接\">#</a> 2.4 外部链接</h4>\n<p>外部的链接将会被自动地设置为 <code>target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;</code>:</p>\n<ul>\n<li><a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">vuejs.org<OutboundLink/></a></li>\n<li><a href=\"https://github.com/vuejs/vuepress\" target=\"_blank\" rel=\"noopener noreferrer\">VuePress on GitHub<OutboundLink/></a></li>\n</ul>\n<p>你可以自定义通过配置 <code>config.markdown.externalLinks</code> 来自定义外部链接的特性。</p>\n<h3 id=\"_3-front-matte\"><a class=\"header-anchor\" href=\"#_3-front-matte\">#</a> 3. Front matte</h3>\n<p>VuePress 提供了对 <a href=\"https://jekyllrb.com/docs/frontmatter/\" target=\"_blank\" rel=\"noopener noreferrer\">YAML front matter<OutboundLink/></a> 开箱即用的支持:</p>\n<!--beforebegin--><div class=\"language-yaml line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-yaml\"><code><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Blogging Like a Hacker\n<span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> en<span class=\"token punctuation\">-</span>US\n<span class=\"token punctuation\">---</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><p>这些数据可以在当前 markdown 的正文，或者是任意的自定义或主题组件中使用。</p>\n<p>想了解更多，请移步 <a href=\"https://vuepress.vuejs.org/zh/guide/frontmatter.html\" target=\"_blank\" rel=\"noopener noreferrer\">Front Matter<OutboundLink/></a>。</p>\n<h1 id=\"\"><a class=\"header-anchor\" href=\"#\">#</a> </h1>\n<h3 id=\"_4-github风格的表格\"><a class=\"header-anchor\" href=\"#_4-github风格的表格\">#</a> 4. GitHub风格的表格</h3>\n<h3 id=\"_5-emoji\"><a class=\"header-anchor\" href=\"#_5-emoji\">#</a> 5. Emoji</h3>\n<h3 id=\"_6-目录\"><a class=\"header-anchor\" href=\"#_6-目录\">#</a> 6. 目录</h3>\n<p>输入</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>[[toc]]\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>目录（Table of Contents）的渲染可以通过 <code>markdown.toc</code> 选项来配置。</p>\n<h3 id=\"_7-自定义容器\"><a class=\"header-anchor\" href=\"#_7-自定义容器\">#</a> 7. 自定义容器</h3>\n<h4 id=\"输入\"><a class=\"header-anchor\" href=\"#输入\">#</a> 输入</h4>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code>::: tip\n这是一个提示\n:::\n\n::: warning\n这是一个警告\n:::\n\n::: danger\n这是一个危险警告\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n:::\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"输出\"><a class=\"header-anchor\" href=\"#输出\">#</a> 输出</h4>\n<div class=\"custom-block tip\"><p class=\"custom-block-title\">提示</p>\n<p>这是一个提示</p>\n</div>\n<div class=\"custom-block warning\"><p class=\"custom-block-title\">WARNING</p>\n<p>这是一个警告</p>\n</div>\n<div class=\"custom-block danger\"><p class=\"custom-block-title\">WARNING</p>\n<p>这是一个危险警告</p>\n</div>\n<details class=\"custom-block details\"><summary>DETAILS</summary>\n<p>这是一个详情块，在 IE / Edge 中不生效</p>\n</details>\n<h4 id=\"可以自定义块中的标题\"><a class=\"header-anchor\" href=\"#可以自定义块中的标题\">#</a> 可以自定义块中的标题：</h4>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code>::: danger STOP\n危险区域，禁止通行\n:::\n\n::: details 点击查看代码\n\\```js\nconsole.log('你好，VuePress！')\nconsole.log('你好，VuePress！')\nconsole.log('你好，VuePress！')\nconsole.log('你好，VuePress！')\n\\```\n:::\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div><!--beforeend--></div><!--afterend--><p>可以自定义块中的标题：</p>\n<div class=\"custom-block danger\"><p class=\"custom-block-title\">STOP</p>\n<p>危险区域，禁止通行</p>\n</div>\n<details class=\"custom-block details\"><summary>点击查看代码</summary>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好，VuePress！'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好，VuePress！'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好，VuePress！'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你好，VuePress！'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--></details>\n<p>参考：<a href=\"https://vuepress.github.io/plugins/container/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-container<OutboundLink/></a></p>\n<h3 id=\"_8-代码块中的语法高\"><a class=\"header-anchor\" href=\"#_8-代码块中的语法高\">#</a> 8. 代码块中的语法高</h3>\n<p>在 Prism 的网站上查看 <a href=\"https://prismjs.com/#languages-list\" target=\"_blank\" rel=\"noopener noreferrer\">合法的语言列表<OutboundLink/></a></p>\n<h3 id=\"_9-行号\"><a class=\"header-anchor\" href=\"#_9-行号\">#</a> 9. 行号</h3>\n<p>可以通过配置来为每个代码块显示行号：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  markdown<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    lineNumbers<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_10-代码块中的行高亮\"><a class=\"header-anchor\" href=\"#_10-代码块中的行高亮\">#</a> 10. 代码块中的行高亮</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><div class=\"highlight-lines\"><br><br><br><div class=\"highlighted\">&nbsp;</div><br><br><br><br></div><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      msg<span class=\"token operator\">:</span> <span class=\"token string\">'Highlighted!'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><p>除了单行以外，你也可指定多行，行数区间，或是两者都指定。</p>\n<ul>\n<li>行数区间: 例如 <code>{5-8}</code>, <code>{3-10}</code>, <code>{10-17}</code></li>\n<li>多个单行: 例如 <code>{4,7,9}</code></li>\n<li>行数区间与多个单行: 例如 <code>{4,7-13,16,23-27,40}</code></li>\n</ul>\n<h4 id=\"输入-2\"><a class=\"header-anchor\" href=\"#输入-2\">#</a> 输入</h4>\n<p><img src=\"/assets/img/markdown_1.png\" alt=\"图片\"></p>\n<h4 id=\"输出-2\"><a class=\"header-anchor\" href=\"#输出-2\">#</a> 输出</h4>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><div class=\"highlight-lines\"><div class=\"highlighted\">&nbsp;</div><br><br><div class=\"highlighted\">&nbsp;</div><br><div class=\"highlighted\">&nbsp;</div><div class=\"highlighted\">&nbsp;</div><br><br><br><br><br></div><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Highlighted</span>\n  <span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      msg<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Highlighted!\n      This line isn't highlighted,\n      but this and the next 2 are.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      motd<span class=\"token operator\">:</span> <span class=\"token string\">'VuePress is awesome'</span><span class=\"token punctuation\">,</span>\n      lorem<span class=\"token operator\">:</span> <span class=\"token string\">'ipsum'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_11-导入代码段\"><a class=\"header-anchor\" href=\"#_11-导入代码段\">#</a> 11. 导入代码段</h3>\n<p>(有些复杂，感觉不太会用到，所以暂时没有弄进来。)<a href=\"https://vuepress.vuejs.org/zh/guide/markdown.html#%E5%AF%BC%E5%85%A5%E4%BB%A3%E7%A0%81%E6%AE%B5\" target=\"_blank\" rel=\"noopener noreferrer\">详情<OutboundLink/></a></p>\n<h3 id=\"_12-进阶配置\"><a class=\"header-anchor\" href=\"#_12-进阶配置\">#</a> 12. 进阶配置</h3>\n<p>VuePress 使用<code>markdown-it</code>来渲染 Markdown，上述大多数的拓展也都是<strong>通过自定义的插件</strong>实现的。</p>\n<p>想要进一步的话，你可以通过 <code>.vuepress/config.js</code> 的 markdown 选项，来对当前的 <code>markdown-it</code> 实例做一些自定义的配置：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  markdown<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// markdown-it-anchor 的选项</span>\n    anchor<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> permalink<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// markdown-it-toc 的选项</span>\n    toc<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> includeLevel<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">extendMarkdown</span><span class=\"token operator\">:</span> <span class=\"token parameter\">md</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 使用更多的 markdown-it 插件!</span>\n      md<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markdown-it-xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"二、在markdown中使用vue\"><a class=\"header-anchor\" href=\"#二、在markdown中使用vue\">#</a> 二、在markdown中使用vue</h2>\n<h3 id=\"_1-浏览器的ap访问限制\"><a class=\"header-anchor\" href=\"#_1-浏览器的ap访问限制\">#</a> 1. 浏览器的AP访问限制</h3>\n<p>当你在开发一个 VuePress 应用时，由于所有的页面在生成静态 HTML 时都需要通过 Node.js 服务端渲染，因此所有的 Vue 相关代码都应当遵循 <a href=\"\">编写通用代码</a>的要求。</p>\n<p>简而言之，请确保只在 <code>beforeMount</code> 或者 <code>mounted</code> 访问浏览器 <code>/ DOM</code> 的 <code>API</code>。</p>\n<p>如果你正在使用，或者需要展示一个对于 SSR 不怎么友好的组件（比如包含了自定义指令），你可以将它们包裹在内置的 <code>&lt;ClientOnly&gt;</code>组件中：</p>\n<ClientOnly>\n  <NonSSRFriendlyComponent/>\n</ClientOnly>\n请注意，这并不能解决一些组件或库在导入时就试图访问浏览器 API 的问题 —— 如果需要使用这样的组件或库，你需要在合适的生命周期钩子中动态导入它们：\n<p>如果你的模块通过 export default 导出一个 Vue 组件，那么你可以动态注册它：</p>\n<template>\n  <component v-if=\"dynamicComponent\" :is=\"dynamicComponent\"></component>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      dynamicComponent: null\n    }\n  },\n  mounted () {\n    import('./lib-that-access-window-on-import').then(module => {\n      this.dynamicComponent = module.default\n    })\n  }\n}\n</script>\n参考:\n<p>Vue.js &gt; 动态组件 (opens new window)</p>\n<h3 id=\"_2-模板语法\"><a class=\"header-anchor\" href=\"#_2-模板语法\">#</a> 2. 模板语法</h3>\n<h4 id=\"插值\"><a class=\"header-anchor\" href=\"#插值\">#</a> 插值</h4>\n<p>每一个 Markdown 文件将首先被编译成 HTML，接着作为一个 Vue 组件传入 vue-loader，这意味着你可以在文本中使用 Vue 风格的插值：</p>\n<h5 id=\"输入-3\"><a class=\"header-anchor\" href=\"#输入-3\">#</a> 输入：</h5>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code>{{ 1 + 1 }}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h5 id=\"输出-3\"><a class=\"header-anchor\" href=\"#输出-3\">#</a> 输出</h5>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>2\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"指令\"><a class=\"header-anchor\" href=\"#指令\">#</a> 指令</h4>\n<p>同样地，也可以使用指令:</p>\n<h5 id=\"输入-4\"><a class=\"header-anchor\" href=\"#输入-4\">#</a> 输入</h5>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i in 3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ i }} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h5 id=\"输出-4\"><a class=\"header-anchor\" href=\"#输出-4\">#</a> 输出</h5>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>1 2 3 \n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"访问网站以及页面的数据\"><a class=\"header-anchor\" href=\"#访问网站以及页面的数据\">#</a> 访问网站以及页面的数据</h4>\n<p>编译后的组件没有私有数据，但可以访问 网站的元数据，举例来说：</p>\n<h5 id=\"输入-5\"><a class=\"header-anchor\" href=\"#输入-5\">#</a> 输入</h5>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code>{{ $page }}\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h5 id=\"输出-5\"><a class=\"header-anchor\" href=\"#输出-5\">#</a> 输出</h5>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/using-vue.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Using Vue in Markdown\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_3-escaping-内联代码中-显示原始大括号\"><a class=\"header-anchor\" href=\"#_3-escaping-内联代码中-显示原始大括号\">#</a> 3. Escaping(内联代码中，显示原始大括号)</h3>\n<p>默认情况下，块级 (block) 的代码块将会被自动包裹在 v-pre 中。</p>\n<p>如果你想要在内联 (inline) 的代码块或者普通文本中<strong>显示原始的大括号</strong>，或者一些 Vue 特定的语法，你需要使用自定义容器 v-pre 来包裹：</p>\n<h5 id=\"输入-6\"><a class=\"header-anchor\" href=\"#输入-6\">#</a> 输入</h5>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code>::: v-pre\n<span class=\"token code keyword\">`{{ This will be displayed as-is }}`</span>\n:::\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><h5 id=\"输出-6\"><a class=\"header-anchor\" href=\"#输出-6\">#</a> 输出</h5>\n<div v-pre><p><code>{{ This will be displayed as-is }}</code></p>\n</div><h3 id=\"_4-使用组件\"><a class=\"header-anchor\" href=\"#_4-使用组件\">#</a> 4. 使用组件</h3>\n<p>所有在 <code>.vuepress/components</code> 中找到的 <code>*.vue</code> 文件将会自动地被注册为全局的异步组件，如：</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>.\n└─ .vuepress\n   └─ components\n      ├─ demo-1.vue\n      ├─ OtherComponent.vue\n      └─ Foo\n         └─ Bar.vue\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><p>你可以<strong>直接使用这些组件</strong>在<strong>任意的Markdown文件中</strong>（组件名是通过文件名取到的）：</p>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>demo-1</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>OtherComponent</span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Foo-Bar</span><span class=\"token punctuation\">/></span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><div class=\"custom-block warning\"><p class=\"custom-block-title\">重要！</p>\n<p>请确保一个自定义组件的名字包含连接符或者是 PascalCase，否则，它将会被视为一个内联元素，并被包裹在一个<code>&lt;p&gt;</code> 标签中，这将会导致 HTML 渲染紊乱，因为 HTML 标准规定，<code>&lt;p&gt;</code>标签中不允许放置任何块级元素。</p>\n</div>\n<h4 id=\"在标题中使用组件\"><a class=\"header-anchor\" href=\"#在标题中使用组件\">#</a> 在标题中使用组件</h4>\n<p>被<code>&lt;code&gt;</code>包装的 HTML 将按原样显示，只有未被包装的 HTML 才会被 Vue 解析。</p>\n<div class=\"custom-block tip\"><p class=\"custom-block-title\">提示</p>\n<ul>\n<li>输出的 HTML 由 markdown-it (opens new window) 完成。</li>\n<li>而解析后的标题由 VuePress 完成，用于侧边栏以及文档的标题。</li>\n</ul>\n</div>\n<h3 id=\"_5-使用预处理器\"><a class=\"header-anchor\" href=\"#_5-使用预处理器\">#</a> 5. 使用预处理器</h3>\n<p>VuePress 对以下预处理器已经内置相关的 webpack 配置：<code>sass</code>、<code>scss</code>、<code>less</code>、<code>stylus</code> 和 <code>pug</code>。\n要使用它们你只需要在项目中安装对应的依赖即可。</p>\n<h4 id=\"例1-要使用-sass-需要安装\"><a class=\"header-anchor\" href=\"#例1-要使用-sass-需要安装\">#</a> 例1，要使用 sass，需要安装：</h4>\n<!--beforebegin--><div class=\"language-sh line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-sh\"><code><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D sass-loader node-sass\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>然后你就可以在 Markdown 或是组件中使用如下代码：</p>\n<!--beforebegin--><div class=\"language-vue line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sass<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  .title\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><h4 id=\"例2-要是用pug-需要安装\"><a class=\"header-anchor\" href=\"#例2-要是用pug-需要安装\">#</a> 例2，要是用<code>pug</code>，需要安装：</h4>\n<p>要在组件中使用 <code>&lt;template lang=&quot;pug&quot;&gt;</code>，则需要安装 <code>pug</code> 和 <code>pug-plain-loader</code>:</p>\n<!--beforebegin--><div class=\"language-sh line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-sh\"><code><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D pug pug-plain-loader\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><div class=\"custom-block tip\"><p class=\"custom-block-title\">提示</p>\n<ul>\n<li>需要指出的是，如果你是一个 <code>stylus</code> 用户，你并不需要在你的项目中安装 <code>stylus</code> 和 <code>stylus-loader</code>，因为 VuePress 已经内置了它们。</li>\n<li>对于那些没有内置的预处理器，除了安装对应的依赖，你还需要 拓展内部的 Webpack 配置。</li>\n</ul>\n</div>\n<h3 id=\"_6-脚本和样式提升\"><a class=\"header-anchor\" href=\"#_6-脚本和样式提升\">#</a> 6. 脚本和样式提升</h3>\n<p>如果只想在<strong>当前页面应用一些 JavaScript 或者 CSS</strong>，在这种情况下，你可以直接在 Markdown 文件中使用原生的 <code>&lt;script&gt;</code>或者 <code>&lt;style&gt;</code> 标签，它们将会从编译后的 HTML 文件中提取出来，并作为生成的 Vue 单文件组件的 <code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code> 标签。</p>\n<h3 id=\"_7-内置的组件\"><a class=\"header-anchor\" href=\"#_7-内置的组件\">#</a> 7. 内置的组件</h3>\n<h4 id=\"outboundlink\"><a class=\"header-anchor\" href=\"#outboundlink\">#</a> OutboundLink</h4>\n<p>用来表明当前是一个外部链接。在 VuePress 中这个组件会紧跟在每一个外部链接后面。</p>\n<h4 id=\"clientonly\"><a class=\"header-anchor\" href=\"#clientonly\">#</a> ClientOnly</h4>\n<p>参考 浏览器的 API 访问限制。</p>\n<h4 id=\"content\"><a class=\"header-anchor\" href=\"#content\">#</a> Content</h4>\n<ul>\n<li>\n<p>Props:</p>\n<ul>\n<li>pageKey - string, 要渲染的 page 的 hash key, 默认值是当前页面的 key.</li>\n<li>slotKey - string, 页面的 markdown slot 的 key. 默认值是 default slot.</li>\n</ul>\n</li>\n<li>\n<p>Usage：</p>\n</li>\n</ul>\n<p>指定一个指定页面的特定 slot 用于渲染，当你使用 自定义布局 或者自定义主题时，这将非常有用。</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>&lt;Content/&gt;\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>参考:</p>\n<ul>\n<li>全局计算属性 &gt; $page</li>\n<li>Markdown 插槽</li>\n<li>开发主题 &gt; 获取渲染内容</li>\n</ul>\n<h4 id=\"badge\"><a class=\"header-anchor\" href=\"#badge\">#</a> Badge</h4>\n<ul>\n<li>\n<p>Props:</p>\n<ul>\n<li>text - string</li>\n<li>type - string, 可选值： &quot;tip&quot;|&quot;warning&quot;|&quot;error&quot;，默认值是： &quot;tip&quot;</li>\n<li>vertical - string, 可选值： &quot;top&quot;|&quot;middle&quot;，默认值是： &quot;top&quot;\nUsage:</li>\n</ul>\n</li>\n</ul>\n<p>你可以在标题中，使用这个组件来为某些 API 添加一些状态：</p>\n<!--beforebegin--><div class=\"language-md line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-md\"><code><span class=\"token title important\"><span class=\"token punctuation\">###</span> Badge &lt;Badge text=\"beta\" type=\"warning\"/> &lt;Badge text=\"默认主题\"/></span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>参考:</p>\n<ul>\n<li>在标题中使用组件</li>\n</ul>\n</ContentSlotsDistributor>\n</template>\n<script>\nexport default {\n  mounted () {\n    import('./lib-that-access-window-on-import').then(module => {\n      // use code\n    })\n  }\n}\n</script>\n\n\n"],"sourceRoot":"docs/vuepress"}]}